{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elliottconway/Desktop/Valtech Dev/parish-digital-2.0/frontend/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"post\\\" && slug.current == $slug][0]{\\n    title,\\n    \\\"name\\\": author->name,\\n    body\\n  }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport groq from 'groq';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../client';\n\nvar Post = function Post(props) {\n  var _props$title = props.title,\n      title = _props$title === void 0 ? 'Missing title' : _props$title,\n      _props$name = props.name,\n      name = _props$name === void 0 ? 'Missing name' : _props$name,\n      _props$body = props.body,\n      body = _props$body === void 0 ? [] : _props$body;\n  return __jsx(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, title), __jsx(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c = Post;\nvar query = groq(_templateObject());\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var slug;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so that it doesn't return \"undefined\"\n            slug = 'home-page';\n            _context.next = 3;\n            return client.fetch(query, {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/elliottconway/Desktop/Valtech Dev/parish-digital-2.0/frontend/pages/index.js"],"names":["groq","BlockContent","client","Post","props","title","name","body","w","h","fit","config","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,qBACkDA,KADlD,CACZC,KADY;AAAA,MACZA,KADY,6BACJ,eADI;AAAA,oBACkDD,KADlD,CACaE,IADb;AAAA,MACaA,IADb,4BACoB,cADpB;AAAA,oBACkDF,KADlD,CACoCG,IADpC;AAAA,MACoCA,IADpC,4BAC2C,EAD3C;AAEpB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CADF,EAEE,MAAC,YAAD;AACI,IAAA,MAAM,EAAEE,IADZ;AAEI,IAAA,YAAY,EAAE;AAAEC,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAFlB,KAGQR,MAAM,CAACS,MAAP,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAUD,CAZH;;KAAMR,I;AAcJ,IAAMS,KAAK,GAAGZ,IAAH,mBAAX;;AAMAG,IAAI,CAACU,eAAL;AAAA,sEAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB;AACMC,YAAAA,IAFe,GAER,WAFQ;AAAA;AAAA,mBAGRb,MAAM,CAACc,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,cAAAA,IAAI,EAAJA;AAAF,aAApB,CAHQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeZ,IAAf","sourcesContent":["import groq from 'groq'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../client'\n\nconst Post = (props) => {\n    const { title = 'Missing title', name = 'Missing name', body = [] } = props\n    return (\n      <article>\n        <h1>{title}</h1>\n        <BlockContent\n            blocks={body}\n            imageOptions={{ w: 320, h: 240, fit: 'max' }}\n            {...client.config()}\n        />\n      </article>\n    )\n  }\n  \n  const query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n    title,\n    \"name\": author->name,\n    body\n  }`\n  \n  Post.getInitialProps = async function (context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const slug = 'home-page'\n    return await client.fetch(query, { slug })\n  }\n  \n  export default Post"]},"metadata":{},"sourceType":"module"}