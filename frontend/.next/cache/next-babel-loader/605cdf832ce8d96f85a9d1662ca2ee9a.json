{"ast":null,"code":"var _jsxFileName = \"/Users/elliottconway/Desktop/Valtech Dev/parish-digital-2.0/frontend/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport groq from 'groq';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../client';\n\nconst Post = props => {\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    body = []\n  } = props;\n  return __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, title), __jsx(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n    title,\n    \"name\": author->name,\n    body\n  }`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const slug = 'home-page';\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/elliottconway/Desktop/Valtech Dev/parish-digital-2.0/frontend/pages/index.js"],"names":["groq","BlockContent","client","Post","props","title","name","body","w","h","fit","config","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAM;AAAEC,IAAAA,KAAK,GAAG,eAAV;AAA2BC,IAAAA,IAAI,GAAG,cAAlC;AAAkDC,IAAAA,IAAI,GAAG;AAAzD,MAAgEH,KAAtE;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADF,EAEE,MAAC,YAAD;AACI,IAAA,MAAM,EAAEE,IADZ;AAEI,IAAA,YAAY,EAAE;AAAEC,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAFlB,KAGQR,MAAM,CAACS,MAAP,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAUD,CAZH;;AAcE,MAAMC,KAAK,GAAGZ,IAAK;;;;IAAnB;;AAMAG,IAAI,CAACU,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C;AACA,QAAMC,IAAI,GAAG,WAAb;AACA,SAAO,MAAMb,MAAM,CAACc,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACD,CAJD;;AAMA,eAAeZ,IAAf","sourcesContent":["import groq from 'groq'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../client'\n\nconst Post = (props) => {\n    const { title = 'Missing title', name = 'Missing name', body = [] } = props\n    return (\n      <article>\n        <h1>{title}</h1>\n        <BlockContent\n            blocks={body}\n            imageOptions={{ w: 320, h: 240, fit: 'max' }}\n            {...client.config()}\n        />\n      </article>\n    )\n  }\n  \n  const query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n    title,\n    \"name\": author->name,\n    body\n  }`\n  \n  Post.getInitialProps = async function (context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const slug = 'home-page'\n    return await client.fetch(query, { slug })\n  }\n  \n  export default Post"]},"metadata":{},"sourceType":"module"}